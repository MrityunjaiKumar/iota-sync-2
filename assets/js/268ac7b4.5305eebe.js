"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3289],{3905:(e,r,t)=>{t.d(r,{Zo:()=>f,kt:()=>d});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=n.createContext({}),c=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},f=function(e){var r=c(e.components);return n.createElement(s.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,f=l(e,["components","mdxType","originalType","parentName"]),u=c(t),d=a,S=u["".concat(s,".").concat(d)]||u[d]||p[d]||i;return t?n.createElement(S,o(o({ref:r},f),{},{components:t})):n.createElement(S,o({ref:r},f))}));function d(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=u;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=t[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},7129:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=t(7462),a=(t(7294),t(3905));const i={},o="SIM800L via ESP8266 softwareSerial",l={unversionedId:"SIM800L/SIM800L_Via_ESP8266",id:"SIM800L/SIM800L_Via_ESP8266",title:"SIM800L via ESP8266 softwareSerial",description:"",source:"@site/docs/05_SIM800L/02_SIM800L_Via_ESP8266.md",sourceDirName:"05_SIM800L",slug:"/SIM800L/SIM800L_Via_ESP8266",permalink:"/docs/SIM800L/SIM800L_Via_ESP8266",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Sim800L Introduction",permalink:"/docs/SIM800L/Intro"}},s={},c=[],f={toc:c};function p(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},f,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sim800l-via-esp8266-softwareserial"},"SIM800L via ESP8266 softwareSerial"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="SIM800L via ESP8266 softwareSerial"',title:'"SIM800L',via:!0,ESP8266:!0,'softwareSerial"':!0},"#include <Arduino.h>\n#include <SoftwareSerial.h>\n\n\nSoftwareSerial swSer(12, 14); //Define hardware connections\n\nvoid setup() {\n  Serial.begin(9600);   //Initialize hardware serial with baudrate of 9600\n  swSer.begin(9600);    //Initialize software serial with baudrate of 9600\n\n  Serial.println(\"\\nSoftware serial test started\");\n\n  for (char ch = ' '; ch <= 'z'; ch++) {  //send serially a to z on software serial\n    swSer.write(ch);\n  }\n  swSer.println(\"\");\n\n}\n\nvoid loop() {\n  while (swSer.available() > 0) {   //wait for data at software serial\n    Serial.write(swSer.read()); //Send data recived from software serial to hardware serial    \n  }\n  while (Serial.available() > 0) { //wait for data at hardware serial\n    swSer.write(Serial.read());     //send data recived from hardware serial to software serial\n  }\n\n}\n")))}p.isMDXComponent=!0}}]);