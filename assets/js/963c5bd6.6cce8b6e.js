"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7873],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=l(t),f=i,m=u["".concat(c,".").concat(f)]||u[f]||d[f]||o;return t?r.createElement(m,s(s({ref:n},p),{},{components:t})):r.createElement(m,s({ref:n},p))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,s=new Array(o);s[0]=u;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a.mdxType="string"==typeof e?e:i,s[1]=a;for(var l=2;l<o;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9910:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var r=t(7462),i=(t(7294),t(3905));const o={sidebar_position:2},s="WiFi Access point",a={unversionedId:"Arduino_ESP8266/Exp1_WiFI_AP",id:"Arduino_ESP8266/Exp1_WiFI_AP",title:"WiFi Access point",description:"The esp8266 is able to be configured as an access point (AP) and generate its own wifi network with ssid and password. This method is useful when you do not have access to a wifi network or if you want to work on a network specific to the microcontroller.",source:"@site/docs/03_Arduino_ESP8266/01_Exp1_WiFI_AP.md",sourceDirName:"03_Arduino_ESP8266",slug:"/Arduino_ESP8266/Exp1_WiFI_AP",permalink:"/docs/Arduino_ESP8266/Exp1_WiFI_AP",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"00 Setting up enviroment",permalink:"/docs/Arduino_ESP8266/Environment_setup"},next:{title:"WiFi Station Mode",permalink:"/docs/Arduino_ESP8266/Exp1_WiFI_STA"}},c={},l=[],p={toc:l};function d(e){let{components:n,...o}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,o,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"wifi-access-point"},"WiFi Access point"),(0,i.kt)("p",null,"The esp8266 is able to be configured as an access point (AP) and generate its own wifi network with ssid and password. This method is useful when you do not have access to a wifi network or if you want to work on a network specific to the microcontroller."),(0,i.kt)("div",{style:{textAlign:"center"}},(0,i.kt)("p",null,(0,i.kt)("img",{src:t(1141).Z,width:"331",height:"316"}))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="WiFi Access Point"',title:'"WiFi',Access:!0,'Point"':!0},'#include <ESP8266WiFi.h>\n#include <WiFiClient.h>\n#include <ESP8266WebServer.h>\n\n#ifndef APSSID\n#define APSSID "sincgrid"\n#define APPSK  "sincgrid.com"\n#endif\n\n/* Set these to your desired credentials. */\nconst char *ssid = APSSID;\nconst char *password = APPSK;\n\nESP8266WebServer server(80);\n\n/* Just a little test message.  Go to http://192.168.4.1 in a web browser\n   connected to this access point to see it.\n*/\nvoid handleRoot() {\n  server.send(200, "text/html", "<h1>You are connected</h1>");\n}\n\nvoid setup() {\n  delay(1000);\n  Serial.begin(115200);\n  Serial.println();\n  Serial.print("Configuring access point...");\n \n \n  WiFi.softAP(ssid, password);\n\n  IPAddress myIP = WiFi.softAPIP();\n  Serial.print("AP IP address: ");\n  Serial.println(myIP);\n  server.on("/", handleRoot);\n  server.begin();\n  Serial.println("HTTP server started");\n}\n\nvoid loop() {\n  server.handleClient();\n}\n')))}d.isMDXComponent=!0},1141:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/IOTA_AP_MODE-3028bdebba0c0a6d8d62b268bade50a8.png"}}]);