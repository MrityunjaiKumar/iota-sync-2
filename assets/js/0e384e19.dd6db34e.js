"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[671],{3905:(t,e,a)=>{a.d(e,{Zo:()=>s,kt:()=>c});var r=a(7294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},i=Object.keys(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var d=r.createContext({}),m=function(t){var e=r.useContext(d),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},s=function(t){var e=m(t.components);return r.createElement(d.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,i=t.originalType,d=t.parentName,s=o(t,["components","mdxType","originalType","parentName"]),u=m(a),c=n,h=u["".concat(d,".").concat(c)]||u[c]||p[c]||i;return a?r.createElement(h,l(l({ref:e},s),{},{components:a})):r.createElement(h,l({ref:e},s))}));function c(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var i=a.length,l=new Array(i);l[0]=u;var o={};for(var d in e)hasOwnProperty.call(e,d)&&(o[d]=e[d]);o.originalType=t,o.mdxType="string"==typeof t?t:n,l[1]=o;for(var m=2;m<i;m++)l[m]=a[m];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},9881:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>m});var r=a(7462),n=(a(7294),a(3905));const i={sidebar_position:1},l="IOTA-SYNC 2",o={unversionedId:"intro",id:"intro",title:"IOTA-SYNC 2",description:"IOTA-SYNC is a platfrom to teach the embedded system basics and Internet of things applications. This IOTA-SYNC 2 is second board in this series. This variant of the baord uses AVR (Atmega328P), ESP8266 and SIM800L.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"AVR Embedded C Tutorials",permalink:"/docs/category/avr-embedded-c-tutorials"}},d={},m=[],s={toc:m};function p(t){let{components:e,...i}=t;return(0,n.kt)("wrapper",(0,r.Z)({},s,i,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"iota-sync-2"},"IOTA-SYNC 2"),(0,n.kt)("p",null,"IOTA-SYNC is a platfrom to teach the embedded system basics and Internet of things applications. This IOTA-SYNC 2 is second board in this series. This variant of the baord uses AVR (Atmega328P), ESP8266 and SIM800L. "),(0,n.kt)("p",null,"Earlier varaint of this board exposes ESP32 (WiFi, Bluetooth), NFC and LORA."),(0,n.kt)("h1",{id:"hardware-blocks"},"Hardware Blocks"),(0,n.kt)("p",null,(0,n.kt)("img",{src:a(5414).Z,width:"791",height:"521"})),(0,n.kt)("h1",{id:"arduino-documentaion-httpsarduinosincgridcomdocsbuildhtmlindexhtml"},"Arduino documentaion (",(0,n.kt)("a",{parentName:"h1",href:"https://arduino.sincgrid.com/docs/build/html/index.html"},"https://arduino.sincgrid.com/docs/build/html/index.html"),")"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://arduino.sincgrid.com/docs/build/html/files/lecture1/index.html"},"INTRODUCTION")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://arduino.sincgrid.com/docs/build/html/files/lecture2/index.html"},"INSTALLATION")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://arduino.sincgrid.com/docs/build/html/files/lecture3/index.html"},"DIGITAL OPERATIONS")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://arduino.sincgrid.com/docs/build/html/files/lecture4/index.html"},"DIGITAL INPUTS")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://arduino.sincgrid.com/docs/build/html/files/lecture5/index.html"},"INTRODUCTION TO SSD")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://arduino.sincgrid.com/docs/build/html/files/lecture6/index.html"},"ANALOG OPERATIONS")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://arduino.sincgrid.com/docs/build/html/files/lecture7/index.html"},"CHARLIEPLEXING")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://arduino.sincgrid.com/docs/build/html/files/lecture8/index.html"},"PWM - OPERATIONS")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://arduino.sincgrid.com/docs/build/html/files/lecture9/index.html"},"INTRODUCTION TO INTERRUPTS")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://arduino.sincgrid.com/docs/build/html/files/lecture10/index.html"},"BUZZER INTRODUCTION")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://arduino.sincgrid.com/docs/build/html/files/lecture11/index.html"},"KEYPAD INTERFACING")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://arduino.sincgrid.com/docs/build/html/files/lecture12/index.html"},"LCD INTERFACING"))),(0,n.kt)("h1",{id:"avr-documentation-httpsincgridinavr-tutorials"},"AVR documentation (",(0,n.kt)("a",{parentName:"h1",href:"http://sincgrid.in/avr-tutorials/"},"http://sincgrid.in/avr-tutorials/"),")"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"http://sincgrid.in/avr-tutorials/avr-tutorial-experiment-1/"},"Flash led at observable rate")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"http://sincgrid.in/avr-tutorials/avr-tutorial-experiment-2/"},"Hello LED")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"http://sincgrid.in/avr-tutorials/avr-tutorial-experiment-3/"},"LED with switch")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"http://sincgrid.in/avr-tutorials/avr-tutorial-experiment-4/"},"Random number generator")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"http://sincgrid.in/avr-tutorials/avr-tutorial-experiment-5/"},"LED toggle with Timer")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"http://sincgrid.in/avr-tutorials/avr-tutorial-experiment-6/"},"Intensity variation of LED based on potentiometer value")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"http://sincgrid.in/avr-tutorials/avr-tutorial-experiment-7/"},"Creating different colors using RGB LEDs")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"http://sincgrid.in/avr-tutorials/avr-tutorial-experiment-8/"},"LDR values on serial monitor")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"http://sincgrid.in/avr-tutorials/avr-tutorial-experiment-9/"},"Automatic Porch Light")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"http://sincgrid.in/avr-tutorials/avr-tutorial-experiment-10/"},"Thermistor value on serial monitor"))),(0,n.kt)("h1",{id:"list-of-experiments-that-can-be-performed-used-avr-in-embedded-c"},"List of experiments that can be performed used AVR in embedded C"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"EXPERIMENT NUMBER"),(0,n.kt)("th",{parentName:"tr",align:null},"EXPERIMENT"),(0,n.kt)("th",{parentName:"tr",align:null},"BOARD REQUIRED"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"1"),(0,n.kt)("td",{parentName:"tr",align:null},"Flash LED at an observable rate."),(0,n.kt)("td",{parentName:"tr",align:null},"MV1")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"2"),(0,n.kt)("td",{parentName:"tr",align:null},"Hello LED \u2013 Flash LED at a rate such that the LED appears always on. Estimate the onset of the rate when the LED appears to stay on"),(0,n.kt)("td",{parentName:"tr",align:null},"MV1")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"3"),(0,n.kt)("td",{parentName:"tr",align:null},"Controlling ON/OFF of an LED using switch"),(0,n.kt)("td",{parentName:"tr",align:null},"MV1 OR MV2")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"4"),(0,n.kt)("td",{parentName:"tr",align:null},"Use LFSR based random number generator to generate a random number and display it"),(0,n.kt)("td",{parentName:"tr",align:null},"MV1 OR MV2")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"5"),(0,n.kt)("td",{parentName:"tr",align:null},"Toggle the LED every second using Timer interrupt"),(0,n.kt)("td",{parentName:"tr",align:null},"MV1")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"6"),(0,n.kt)("td",{parentName:"tr",align:null},"Use the potentiometer to change the red LED intensity from 0 to maximum in 256 steps"),(0,n.kt)("td",{parentName:"tr",align:null},"MV1")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"7"),(0,n.kt)("td",{parentName:"tr",align:null},"Use the switch to select the LED (from RGB led) and then the potentiometer to set the intensity of that LED and thus create your own color from amongst 16million colors"),(0,n.kt)("td",{parentName:"tr",align:null},"MV1")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"8"),(0,n.kt)("td",{parentName:"tr",align:null},"Read the ADC value of the voltage divider involving the LDR. Print the value on the serial monitor"),(0,n.kt)("td",{parentName:"tr",align:null},"MV1")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"9"),(0,n.kt)("td",{parentName:"tr",align:null},"Use the LDR and estimate a threshold for the LDR value and use that to turn the RGB LED on, to simulate an \u2018automatic porch light\u2019"),(0,n.kt)("td",{parentName:"tr",align:null},"MV1")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"10"),(0,n.kt)("td",{parentName:"tr",align:null},"Use the thermistor to estimate the temperature and print the raw value on the serial monitor"),(0,n.kt)("td",{parentName:"tr",align:null},"MV1")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"11"),(0,n.kt)("td",{parentName:"tr",align:null},"Connect the LCD I/O Board and print \u2018Hello World\u2019 on the LCD. Scroll display from left to right"),(0,n.kt)("td",{parentName:"tr",align:null},"MV2")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"12"),(0,n.kt)("td",{parentName:"tr",align:null},"Use the on-board EEPROM to store the temperature min and max values together with a time stamp"),(0,n.kt)("td",{parentName:"tr",align:null},"MV2")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"13"),(0,n.kt)("td",{parentName:"tr",align:null},"Speed control of D.C. motor"),(0,n.kt)("td",{parentName:"tr",align:null},"MV3")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"14"),(0,n.kt)("td",{parentName:"tr",align:null},"Speed control of Stepper motor"),(0,n.kt)("td",{parentName:"tr",align:null},"MV3")))))}p.isMDXComponent=!0},5414:(t,e,a)=>{a.d(e,{Z:()=>r});const r=a.p+"assets/images/Block_Diagram-b175a8e1859963bdaf6f669ca7e1bf4b.svg"}}]);